{
    "anomalyDetectionRules": {
        "global": {
            "ddosDetection": {
                "enabled": true,
                "threshold": {
                    "requestsPerMinute": 100
                },
                "actions": [
                    {
                        "type": "rate_limit",
                        "limit": "50 rpm",
                        "response": {
                            "status": 429,
                            "message": "Too many global requests. Please slow down."
                        }
                    },
                    {
                        "type": "temporary_ban",
                        "duration": "10m",
                        "response": {
                            "status": 403,
                            "message": "Temporary ban due to suspected DDoS activity."
                        }
                    }
                ]
            },
            "mitmDetection": {
                "enabled": true,
                "indicators": [
                    "invalid_ssl_certificate",
                    "abnormal_tls_handshake",
                    "suspicious_user_agent"
                ],
                "actions": [
                    {
                        "type": "permanent_ban",
                        "response": {
                            "status": 403,
                            "message": "Connection blocked due to security concerns (MITM detected)."
                        }
                    }
                ]
            },
            "rules": {
                "businessHours": {
                    "type": "pipeline",
                    "enabled": true,
                    "pipeline": {
                        "nodes": [
                            {
                                "id": "check_endpoint",
                                "type": "utility",
                                "function": "checkEndpoint",
                                "params": {
                                    "endpoint": "/api/login"
                                }
                            },
                            {
                                "id": "get_time",
                                "type": "utility",
                                "function": "getCurrentTime"
                            },
                            {
                                "id": "parse_start",
                                "type": "utility",
                                "function": "parseTime",
                                "params": {
                                    "timeString": "09:00",
                                    "layout": "15:04"
                                }
                            },
                            {
                                "id": "parse_end",
                                "type": "utility",
                                "function": "parseTime",
                                "params": {
                                    "timeString": "17:00",
                                    "layout": "15:04"
                                }
                            },
                            {
                                "id": "check_hours",
                                "type": "condition",
                                "function": "checkBusinessHours",
                                "params": {
                                    "timezone": "UTC"
                                }
                            }
                        ],
                        "edges": [
                            { "from": "check_endpoint", "to": "get_time" },
                            { "from": "get_time", "to": "parse_start" },
                            { "from": "parse_start", "to": "parse_end" },
                            { "from": "parse_end", "to": "check_hours" }
                        ]
                    },
                    "actions": [
                        {
                            "type": "temporary_ban",
                            "duration": "1h",
                            "response": {
                                "status": 403,
                                "message": "Login attempted outside business hours."
                            }
                        }
                    ]
                },
                "businessRegion": {
                    "type": "pipeline",
                    "enabled": true,
                    "pipeline": {
                        "nodes": [
                            {
                                "id": "check_endpoint",
                                "type": "utility",
                                "function": "checkEndpoint",
                                "params": {
                                    "endpoint": "/api/login"
                                }
                            },
                            {
                                "id": "get_ip",
                                "type": "utility",
                                "function": "getClientIP"
                            },
                            {
                                "id": "get_country",
                                "type": "utility",
                                "function": "getCountryFromIP",
                                "params": {
                                    "defaultCountry": "US"
                                }
                            },
                            {
                                "id": "check_region",
                                "type": "condition",
                                "function": "checkBusinessRegion",
                                "params": {
                                    "allowedCountries": [ "US", "CA" ]
                                }
                            }
                        ],
                        "edges": [
                            { "from": "check_endpoint", "to": "get_ip" },
                            { "from": "get_ip", "to": "get_country" },
                            { "from": "get_country", "to": "check_region" }
                        ]
                    },
                    "actions": [
                        {
                            "type": "temporary_ban",
                            "duration": "1h",
                            "response": {
                                "status": 403,
                                "message": "Login attempted from unauthorized region."
                            }
                        }
                    ]
                },
                "protectedRoute": {
                    "type": "pipeline",
                    "enabled": true,
                    "pipeline": {
                        "nodes": [
                            {
                                "id": "check_protected",
                                "type": "condition",
                                "function": "checkProtectedRoute",
                                "params": {
                                    "protectedRoutes": [ "/api/protected" ],
                                    "loginCheckHeader": "Authorization"
                                }
                            }
                        ],
                        "edges": [ ]
                    },
                    "actions": [
                        {
                            "type": "rate_limit",
                            "response": {
                                "status": 401,
                                "message": "Unauthorized access to protected route."
                            }
                        }
                    ]
                },
                "sessionHijacking": {
                    "type": "pipeline",
                    "enabled": true,
                    "pipeline": {
                        "nodes": [
                            {
                                "id": "check_session",
                                "type": "condition",
                                "function": "checkSessionHijacking",
                                "params": {
                                    "maxConcurrentSessions": 1,
                                    "sessionTimeout": "24h"
                                }
                            }
                        ],
                        "edges": [ ]
                    },
                    "actions": [
                        {
                            "type": "temporary_ban",
                            "duration": "30m",
                            "response": {
                                "status": 403,
                                "message": "Session hijacking detected."
                            }
                        }
                    ]
                }
            }
        },
        "apiEndpoints": {
            "/api/login": {
                "rateLimit": {
                    "requestsPerMinute": 5,
                    "burst": 2
                },
                "actions": [
                    {
                        "type": "jitter_warning",
                        "jitterRangeMs": [ 500, 2000 ],
                        "response": {
                            "status": 429,
                            "message": "Too many login attempts. Please wait a moment."
                        }
                    },
                    {
                        "type": "temporary_ban",
                        "duration": "15m",
                        "trigger": {
                            "key": "failedLogins",
                            "threshold": 5,
                            "within": "2m"
                        },
                        "response": {
                            "status": 403,
                            "message": "You are temporarily banned due to excessive failed logins."
                        }
                    }
                ]
            },
            "/api/data/export": {
                "rateLimit": {
                    "requestsPerMinute": 3
                },
                "actions": [
                    {
                        "type": "rate_limit",
                        "limit": "3 rpm",
                        "response": {
                            "status": 429,
                            "message": "Rate limit exceeded for data export API."
                        }
                    },
                    {
                        "type": "jitter_warning",
                        "jitterRangeMs": [ 1000, 5000 ],
                        "response": {
                            "status": 429,
                            "message": "You are making export requests too frequently."
                        }
                    }
                ]
            }
        }
    }
}
